{"ast":null,"code":"var _jsxFileName = \"/home/peter/334/fullstack/frontend/src/pages/generalPages/loginPage/index.jsx\",\n    _s = $RefreshSig$();\n\nimport Logo from \"../../../assets/logo/logo\"; //Material UI\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button } from \"@material-ui/core\"; //Customer Component\n\nimport { TextField } from \"../../../components/InputFields/TextField\";\nimport { PasswordField } from \"../../../components/InputFields/Password\"; //Validation\n\nimport { emailValidation, passwordValidation } from '../../../components/InputFields/Validation'; //React\n\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router\"; //Redux\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { logUserInSuccess, logUserInError } from '../../../redux/login/actions';\nimport { createSelector } from \"reselect\";\nimport { selectLoginError } from \"../../../redux/login/selector\"; //Endpoint APIs\n\nimport Axios from \"axios\";\nimport { loginApiUrl } from \"../../../constants/apiURL\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stateSelector = createSelector(selectLoginError, loginError => ({\n  loginError\n}));\n\nconst actionDispatch = dispatch => ({\n  logUserInSuccess: users => dispatch(logUserInSuccess(users)),\n  logUserInError: users => dispatch(logUserInError(users))\n});\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: \"flex\",\n    flexDirection: 'column',\n    width: '70%',\n    margin: 'auto'\n  },\n  logoWrapper: {\n    margin: '0 auto',\n    [theme.breakpoints.down('sm')]: {\n      width: '100%',\n      paddingBottom: '5%'\n    },\n    [theme.breakpoints.up('md')]: {\n      width: '30%',\n      paddingBottom: '2%'\n    }\n  },\n  buttonWrapper: {\n    display: \"flex\",\n    flexDirection: 'column',\n    margin: 'auto',\n    [theme.breakpoints.down('sm')]: {\n      width: '100%',\n      paddingBottom: '3%'\n    },\n    [theme.breakpoints.up('md')]: {\n      width: '40%',\n      paddingBottom: '1%'\n    }\n  },\n  button: {\n    fontSize: '1.4em'\n  },\n  errorText: {\n    color: 'red',\n    padding: 0,\n    margin: 0\n  }\n}));\nexport const LoginPage = props => {\n  _s();\n\n  const classes = useStyles();\n  const history = useHistory();\n  const {\n    loginError\n  } = useSelector(stateSelector);\n  const {\n    logUserInSuccess,\n    logUserInError\n  } = actionDispatch(useDispatch());\n  const [email, setEmail] = useState('');\n  const [emailError, setEmailError] = useState(false);\n  const [password, setPassword] = useState('');\n  const [passwordError, setPasswordError] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const [passwordErrorMessage, setPasswordErrorMessage] = useState(''); //Updates values in state\n\n  const setEmailValue = event => {\n    setEmail(event.target.value);\n    setEmailError(false);\n  };\n\n  const setPasswordValue = event => {\n    setPassword(event.target.value);\n    setPasswordError(false);\n  }; //handle clicking the icon to show/hide password\n\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  }; //checks if the data in input fields are valid\n\n\n  const handleLoginButtonClick = () => {\n    if (!emailValidation(email)) {\n      setEmailError(true);\n    }\n\n    const passwordValidationResult = passwordValidation(password);\n\n    if (!passwordValidationResult.valid) {\n      setPasswordError(true);\n      setPasswordErrorMessage(passwordValidationResult.message);\n    }\n\n    if (!emailError && !passwordError) {\n      //email and passwords are valid\n      logInProcess();\n    }\n\n    if (email === \"debug\") {\n      logInProcess();\n    }\n  }; //send data to backend to try to log in\n\n\n  const logInProcess = async () => {\n    if (email === 'debug') {\n      logUserInSuccess({\n        firstName: \"FNTest\",\n        lastName: \"LNTest\",\n        email: \"EmailTest\",\n        phoneNumber: \"1234567890\",\n        accessToken: \"accessTokenTest\"\n      });\n      history.push('/');\n    } else {\n      try {\n        var _response$data$user, _response$data$user2;\n\n        const response = await Axios({\n          method: 'post',\n          url: loginApiUrl,\n          data: {\n            email: email,\n            password: password\n          }\n        });\n        logUserInSuccess({\n          firstName: response.data.user.first_name,\n          lastName: response.data.user.last_name,\n          email: (_response$data$user = response.data.user) === null || _response$data$user === void 0 ? void 0 : _response$data$user.email,\n          phoneNumber: (_response$data$user2 = response.data.user) === null || _response$data$user2 === void 0 ? void 0 : _response$data$user2.phoneNumber,\n          accessToken: `token ${response.data.token}`\n        });\n        history.push('/');\n      } catch (err) {\n        console.log('LOGIN API ERROR: ', err); //error occured -> could not login\n\n        logUserInError();\n      }\n    }\n  }; //handle sign up button click\n\n\n  const handleSignupButtonClick = () => {\n    history.push(\"/signup\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.logoWrapper,\n      children: /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      id: \"email\",\n      label: \"Email\",\n      value: email,\n      onChangeHandler: setEmailValue,\n      errorValue: emailError,\n      errorMessage: \"Please enter a valid email address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PasswordField, {\n      id: \"password\",\n      label: \"Password\",\n      value: password,\n      onChangeHandler: setPasswordValue,\n      errorValue: passwordError,\n      errorMessage: passwordErrorMessage,\n      showPassword: showPassword,\n      handleClickShowPassword: handleClickShowPassword\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.buttonWrapper,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: () => handleLoginButtonClick(),\n        className: classes.button,\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.buttonWrapper,\n      children: [loginError ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.errorText,\n        children: passwordErrorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 31\n      }, this) : \"\", /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: () => handleSignupButtonClick(),\n        className: classes.button,\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LoginPage, \"HZ9XfyHyp974rzeAC+gUGQ9EUdc=\", false, function () {\n  return [useStyles, useHistory, useSelector, useDispatch];\n});\n\n_c = LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/home/peter/334/fullstack/frontend/src/pages/generalPages/loginPage/index.jsx"],"names":["Logo","makeStyles","Button","TextField","PasswordField","emailValidation","passwordValidation","useState","useHistory","useSelector","useDispatch","logUserInSuccess","logUserInError","createSelector","selectLoginError","Axios","loginApiUrl","stateSelector","loginError","actionDispatch","dispatch","users","useStyles","theme","container","display","flexDirection","width","margin","logoWrapper","breakpoints","down","paddingBottom","up","buttonWrapper","button","fontSize","errorText","color","padding","LoginPage","props","classes","history","email","setEmail","emailError","setEmailError","password","setPassword","passwordError","setPasswordError","showPassword","setShowPassword","passwordErrorMessage","setPasswordErrorMessage","setEmailValue","event","target","value","setPasswordValue","handleClickShowPassword","handleLoginButtonClick","passwordValidationResult","valid","message","logInProcess","firstName","lastName","phoneNumber","accessToken","push","response","method","url","data","user","first_name","last_name","token","err","console","log","handleSignupButtonClick"],"mappings":"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","sourcesContent":["import Logo from \"../../../assets/logo/logo\"\n\n//Material UI\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button } from \"@material-ui/core\";\n\n//Customer Component\nimport { TextField } from \"../../../components/InputFields/TextField\";\nimport { PasswordField } from \"../../../components/InputFields/Password\";\n\n//Validation\nimport { emailValidation, passwordValidation } from '../../../components/InputFields/Validation'\n\n//React\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router\";\n\n//Redux\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { logUserInSuccess, logUserInError } from '../../../redux/login/actions'\nimport { createSelector } from \"reselect\";\nimport { selectLoginError } from \"../../../redux/login/selector\";\n\n//Endpoint APIs\nimport Axios from \"axios\";\nimport { loginApiUrl } from \"../../../constants/apiURL\";\n\nconst stateSelector = createSelector(selectLoginError, (loginError) => ({\n    loginError,\n}));\n\nconst actionDispatch = (dispatch) => ({\n    logUserInSuccess: (users) => dispatch(logUserInSuccess(users)),\n    logUserInError: (users) => dispatch(logUserInError(users)),\n});\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        display: \"flex\",\n        flexDirection: 'column',\n        width: '70%',\n        margin: 'auto',\n    },\n    logoWrapper: {\n        margin: '0 auto',\n\n        [theme.breakpoints.down('sm')]: {\n            width: '100%',\n            paddingBottom: '5%',\n        },\n        [theme.breakpoints.up('md')]: {\n            width: '30%',\n            paddingBottom: '2%',\n        },\n    },\n    buttonWrapper: {\n        display: \"flex\",\n        flexDirection: 'column',\n        margin: 'auto',\n\n        [theme.breakpoints.down('sm')]: {\n            width: '100%',\n            paddingBottom: '3%',\n        },\n        [theme.breakpoints.up('md')]: {\n            width: '40%',\n            paddingBottom: '1%',\n        }\n    },\n    button: {\n        fontSize: '1.4em'\n    },\n    errorText: {\n        color: 'red',\n        padding: 0,\n        margin: 0\n    }\n}));\n\nexport const LoginPage = (props) => {\n    const classes = useStyles();\n    const history = useHistory();\n    const { loginError } = useSelector(stateSelector);\n    const { logUserInSuccess, logUserInError } = actionDispatch(useDispatch());\n\n    const [email, setEmail] = useState('');\n    const [emailError, setEmailError] = useState(false);\n    const [password, setPassword] = useState('');\n    const [passwordError, setPasswordError] = useState(false);\n    const [showPassword, setShowPassword] = useState(false);\n    const [passwordErrorMessage, setPasswordErrorMessage] = useState('');\n\n    //Updates values in state\n    const setEmailValue = (event) => {\n        setEmail(event.target.value);\n        setEmailError(false);\n    }\n    const setPasswordValue = (event) => {\n        setPassword(event.target.value);\n        setPasswordError(false);\n    }\n\n    //handle clicking the icon to show/hide password\n    const handleClickShowPassword = () => {\n        setShowPassword(!showPassword);\n    };\n\n    //checks if the data in input fields are valid\n    const handleLoginButtonClick = () => {\n        if(!emailValidation(email)){\n            setEmailError(true);\n        }\n\n        const passwordValidationResult = passwordValidation(password);\n        if(!passwordValidationResult.valid){\n            setPasswordError(true);\n            setPasswordErrorMessage(passwordValidationResult.message);\n        }\n\n        if(!emailError && !passwordError){\n            //email and passwords are valid\n            logInProcess();\n        }\n\n        if(email === \"debug\"){\n            logInProcess();\n        }\n    }\n\n    //send data to backend to try to log in\n    const logInProcess = async () => {\n        if(email === 'debug'){\n            logUserInSuccess({\n                firstName: \"FNTest\",\n                lastName: \"LNTest\",\n                email: \"EmailTest\",\n                phoneNumber: \"1234567890\",\n                accessToken: \"accessTokenTest\",\n            });\n            history.push('/');\n        }else {\n            try {\n                const response = await Axios({\n                    method: 'post',\n                    url: loginApiUrl,\n                    data: {\n                        email: email,\n                        password: password,\n                    },\n                });\n                    \n                logUserInSuccess({\n                    firstName: response.data.user.first_name,\n                    lastName: response.data.user.last_name,\n                    email: response.data.user?.email,\n                    phoneNumber: response.data.user?.phoneNumber,\n                    accessToken: `token ${response.data.token}`,\n                });\n                history.push('/');\n            } catch (err) {\n                console.log('LOGIN API ERROR: ', err)\n                //error occured -> could not login\n                logUserInError();\n            }\n        }\n    }\n\n    //handle sign up button click\n    const handleSignupButtonClick = () => {\n        history.push(\"/signup\");\n    }\n\n    return (\n        <div className={classes.container}>\n            <div className={classes.logoWrapper}>\n                <Logo />\n            </div>\n            {/* Email */}\n            <TextField id=\"email\"\n                label=\"Email\" value={email} onChangeHandler={setEmailValue}\n                errorValue={emailError} errorMessage=\"Please enter a valid email address\"\n            />\n\n            {/* Password */}\n            <PasswordField id=\"password\"\n                label=\"Password\" value={password} onChangeHandler={setPasswordValue}\n                errorValue={passwordError} errorMessage={passwordErrorMessage}\n                showPassword={showPassword} handleClickShowPassword={handleClickShowPassword}\n            />\n\n            {/* Login Button */}\n            <div className={classes.buttonWrapper}>\n                <Button variant=\"contained\" color=\"secondary\" onClick={() => handleLoginButtonClick()} className={classes.button}>\n                    Log In\n                </Button>\n            </div>\n\n            {/* Sign up button */}\n            <div className={classes.buttonWrapper}>\n                {loginError ? <p className={classes.errorText}>{passwordErrorMessage}</p> : \"\"}\n                <Button variant=\"contained\" color=\"secondary\" onClick={() => handleSignupButtonClick() } className={classes.button}>\n                    Sign Up\n                </Button>\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}