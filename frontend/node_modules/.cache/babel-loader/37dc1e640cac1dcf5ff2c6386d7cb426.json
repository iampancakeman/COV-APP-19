{"ast":null,"code":"export const textFieldValidation = text => {\n  //can not be empty\n  if (text.trim() === \"\") return false;\n  return true;\n};\nexport const emailValidation = email => {\n  //can not be empty\n  if (email.trim() === \"\") return false; //check pattern *@*.*\n\n  if (!new RegExp(/\\S+@\\S+\\.\\S+/).test(email)) return false;\n  return true;\n};\nexport const passwordValidation = password => {\n  //cannot contain white space\n  if (password !== password.trim()) return {\n    valid: false,\n    message: 'Password can not be empty'\n  }; //needs to contain an uppercase letter\n\n  if (password === password.toLowerCase()) return {\n    valid: false,\n    message: 'Password need to contain a uppercase letter'\n  }; //needs to contain a lowercase letter\n\n  if (password === password.toUpperCase()) return {\n    valid: false,\n    message: 'Password need to contain a lowercase letter'\n  }; //needs to be atleast 8 characters long\n\n  if (password.length < 8) {\n    return {\n      valid: false,\n      message: 'Password needs to be ateast 8 characters long'\n    };\n  }\n\n  return {\n    valid: true,\n    message: 'Password is valid'\n  };\n};\nexport const phoneNumberValidation = phoneNumber => {\n  //can not be empty\n  if (phoneNumber.trim() === \"\") return false; //needs to be 10 digits\n\n  if (!new RegExp(/^\\d{10}$/).test(phoneNumber)) return false;\n  return true;\n};","map":{"version":3,"sources":["/home/peter/334/fullstack/frontend/src/components/InputFields/Validation/index.js"],"names":["textFieldValidation","text","trim","emailValidation","email","RegExp","test","passwordValidation","password","valid","message","toLowerCase","toUpperCase","length","phoneNumberValidation","phoneNumber"],"mappings":"AAAA,OAAO,MAAMA,mBAAmB,GAAIC,IAAD,IAAU;AACzC;AACA,MAAGA,IAAI,CAACC,IAAL,OAAgB,EAAnB,EACI,OAAO,KAAP;AAEJ,SAAO,IAAP;AACH,CANM;AAQP,OAAO,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACtC;AACA,MAAGA,KAAK,CAACF,IAAN,OAAiB,EAApB,EACI,OAAO,KAAP,CAHkC,CAKtC;;AACA,MAAG,CAAC,IAAIG,MAAJ,CAAW,cAAX,EAA2BC,IAA3B,CAAgCF,KAAhC,CAAJ,EACI,OAAO,KAAP;AAEJ,SAAO,IAAP;AACH,CAVM;AAYP,OAAO,MAAMG,kBAAkB,GAAIC,QAAD,IAAc;AAC5C;AACA,MAAGA,QAAQ,KAAKA,QAAQ,CAACN,IAAT,EAAhB,EACI,OAAO;AACHO,IAAAA,KAAK,EAAE,KADJ;AAEHC,IAAAA,OAAO,EAAE;AAFN,GAAP,CAHwC,CAQ5C;;AACA,MAAGF,QAAQ,KAAKA,QAAQ,CAACG,WAAT,EAAhB,EACI,OAAO;AACHF,IAAAA,KAAK,EAAE,KADJ;AAEHC,IAAAA,OAAO,EAAE;AAFN,GAAP,CAVwC,CAe5C;;AACA,MAAGF,QAAQ,KAAKA,QAAQ,CAACI,WAAT,EAAhB,EACI,OAAO;AACHH,IAAAA,KAAK,EAAE,KADJ;AAEHC,IAAAA,OAAO,EAAE;AAFN,GAAP,CAjBwC,CAsB5C;;AACA,MAAGF,QAAQ,CAACK,MAAT,GAAkB,CAArB,EAAuB;AACnB,WAAO;AACHJ,MAAAA,KAAK,EAAE,KADJ;AAEHC,MAAAA,OAAO,EAAE;AAFN,KAAP;AAIH;;AAGD,SAAO;AAAED,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,OAAO,EAAE;AAAxB,GAAP;AACH,CAhCM;AAkCP,OAAO,MAAMI,qBAAqB,GAAIC,WAAD,IAAiB;AAClD;AACA,MAAGA,WAAW,CAACb,IAAZ,OAAuB,EAA1B,EACI,OAAO,KAAP,CAH8C,CAKlD;;AACA,MAAG,CAAC,IAAIG,MAAJ,CAAW,UAAX,EAAuBC,IAAvB,CAA4BS,WAA5B,CAAJ,EACI,OAAO,KAAP;AAEJ,SAAO,IAAP;AACH,CAVM","sourcesContent":["export const textFieldValidation = (text) => {\n    //can not be empty\n    if(text.trim() === \"\")\n        return false;\n\n    return true;\n};\n\nexport const emailValidation = (email) => {\n    //can not be empty\n    if(email.trim() === \"\")\n        return false;\n    \n    //check pattern *@*.*\n    if(!new RegExp(/\\S+@\\S+\\.\\S+/).test(email))\n        return false;\n    \n    return true;\n}\n\nexport const passwordValidation = (password) => {\n    //cannot contain white space\n    if(password !== password.trim())\n        return {\n            valid: false,\n            message: 'Password can not be empty',\n        };\n\n    //needs to contain an uppercase letter\n    if(password === password.toLowerCase())\n        return {\n            valid: false,\n            message: 'Password need to contain a uppercase letter',\n        };\n\n    //needs to contain a lowercase letter\n    if(password === password.toUpperCase())\n        return {\n            valid: false,\n            message: 'Password need to contain a lowercase letter',\n        };\n\n    //needs to be atleast 8 characters long\n    if(password.length < 8){\n        return {\n            valid: false,\n            message: 'Password needs to be ateast 8 characters long',\n        };\n    }\n    \n\n    return { valid: true, message: 'Password is valid' };\n}\n\nexport const phoneNumberValidation = (phoneNumber) => {\n    //can not be empty\n    if(phoneNumber.trim() === \"\")\n        return false;\n    \n    //needs to be 10 digits\n    if(!new RegExp(/^\\d{10}$/).test(phoneNumber))\n        return false;\n    \n    return true;\n}"]},"metadata":{},"sourceType":"module"}