{"ast":null,"code":"var _jsxFileName = \"/home/peter/334/fullstack/frontend/src/components/Layout/NavBar/DrawItemsList.jsx\",\n    _s = $RefreshSig$();\n\nimport { List, ListItem, ListItemIcon, ListItemText } from '@material-ui/core/';\nimport { NavLink } from \"react-router-dom\";\nimport { UserTypes } from \"../../../constants/userTypes\"; //Icons\n\nimport NotificationIcon from '../../../assets/icons/NotificationIcon/NotificationIcon';\nimport EmployeeIcon from '../../../assets/icons/EmployeeIcon/EmployeeIcon';\nimport SignIntoWork from '../../../assets/icons/SignIntoWorkIcon/SignIntoWorkIcon';\nimport SettingIcon from '../../../assets/icons/SettingIcon/SettingIcon';\nimport QRCodeIcon from '../../../assets/icons/QRCode/QRCodeIcon'; //redux\n\nimport { useSelector } from \"react-redux\";\nimport { createSelector, createStructuredSelector } from \"reselect\";\nimport { selectUserType } from \"../../../redux/login/selector\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stateSelector = createStructuredSelector({\n  currentUserType: createSelector(selectUserType, userType => userType)\n});\nexport const DrawItemsList = props => {\n  _s();\n\n  const {\n    width,\n    toogleMobileOpen\n  } = props;\n  const {\n    currentUserType\n  } = useSelector(stateSelector);\n\n  const handleDrawerToggle = () => {\n    if (width < 600) toogleMobileOpen();\n  };\n\n  const itemList = getListByType(currentUserType);\n  return /*#__PURE__*/_jsxDEV(List, {\n    children: itemList.map((item, index) => {\n      const {\n        text,\n        icon,\n        url\n      } = item;\n      return /*#__PURE__*/_jsxDEV(NavLink, {\n        to: url,\n        children: /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          onClick: handleDrawerToggle,\n          children: [icon && /*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 38\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this)\n      }, text, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DrawItemsList, \"9Iy5QdUwgOjrpcLJbgGXC6P19bk=\", false, function () {\n  return [useSelector];\n});\n\n_c = DrawItemsList;\n\nconst getListByType = currentUserType => {\n  switch (currentUserType) {\n    case UserTypes.GeneralUser:\n      return generalUserItemList;\n\n    case UserTypes.BusinessUser:\n      return businessUserItemList;\n\n    default:\n      return [];\n  }\n};\n\nconst generalUserItemList = [{\n  text: \"Check in\",\n  icon: /*#__PURE__*/_jsxDEV(NotificationIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 15\n  }, this),\n  url: \"/checkin\"\n}, {\n  text: \"QR Scan\",\n  icon: /*#__PURE__*/_jsxDEV(NotificationIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 15\n  }, this),\n  url: \"/qr-scan\"\n}];\nconst businessUserItemList = [{\n  text: \"Notifications\",\n  icon: /*#__PURE__*/_jsxDEV(NotificationIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 19\n  }, this),\n  url: \"/notification\"\n}, {\n  text: \"Employees\",\n  icon: /*#__PURE__*/_jsxDEV(EmployeeIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 19\n  }, this),\n  url: \"/employee\"\n}, {\n  text: \"Sign into Work\",\n  icon: /*#__PURE__*/_jsxDEV(SignIntoWork, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 19\n  }, this),\n  url: \"/sign_into_work\"\n}, {\n  text: \"Setting\",\n  icon: /*#__PURE__*/_jsxDEV(SettingIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 19\n  }, this),\n  url: \"/setting\"\n}, {\n  text: \"QR Code\",\n  icon: /*#__PURE__*/_jsxDEV(QRCodeIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 19\n  }, this),\n  url: \"/qr_code\"\n}];\n\nvar _c;\n\n$RefreshReg$(_c, \"DrawItemsList\");","map":{"version":3,"sources":["/home/peter/334/fullstack/frontend/src/components/Layout/NavBar/DrawItemsList.jsx"],"names":["List","ListItem","ListItemIcon","ListItemText","NavLink","UserTypes","NotificationIcon","EmployeeIcon","SignIntoWork","SettingIcon","QRCodeIcon","useSelector","createSelector","createStructuredSelector","selectUserType","stateSelector","currentUserType","userType","DrawItemsList","props","width","toogleMobileOpen","handleDrawerToggle","itemList","getListByType","map","item","index","text","icon","url","GeneralUser","generalUserItemList","BusinessUser","businessUserItemList"],"mappings":"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","sourcesContent":["import {List, ListItem, ListItemIcon, ListItemText } from '@material-ui/core/';\nimport { NavLink } from \"react-router-dom\";\nimport { UserTypes } from \"../../../constants/userTypes\";\n\n//Icons\nimport NotificationIcon from '../../../assets/icons/NotificationIcon/NotificationIcon';\nimport EmployeeIcon from '../../../assets/icons/EmployeeIcon/EmployeeIcon';\nimport SignIntoWork from '../../../assets/icons/SignIntoWorkIcon/SignIntoWorkIcon';\nimport SettingIcon from '../../../assets/icons/SettingIcon/SettingIcon';\nimport QRCodeIcon from '../../../assets/icons/QRCode/QRCodeIcon';\n\n//redux\nimport { useSelector } from \"react-redux\";\nimport { createSelector, createStructuredSelector } from \"reselect\";\nimport { selectUserType, } from \"../../../redux/login/selector\";\n\nconst stateSelector = createStructuredSelector({\n    currentUserType: createSelector(selectUserType, (userType) => userType),\n});\n\nexport const DrawItemsList = (props) => {\n    const { width, toogleMobileOpen} = props;\n    const { currentUserType } = useSelector(stateSelector);\n\n    const handleDrawerToggle = () => {\n        if(width < 600)\n            toogleMobileOpen();\n    };\n\n    const itemList = getListByType(currentUserType);\n    \n    return (\n        <List>\n            {itemList.map((item, index) => {\n                const { text, icon, url } = item;\n                return (\n                    <NavLink to={url} key={text}> \n                        <ListItem button onClick={handleDrawerToggle}>\n                            {icon && <ListItemIcon>{icon}</ListItemIcon>}\n                            <ListItemText primary={text} />\n                        </ListItem>\n                    </NavLink>\n                );\n            })}\n        </List>\n    );\n};\n\nconst getListByType = (currentUserType) => {\n    switch(currentUserType){\n        case UserTypes.GeneralUser:\n            return generalUserItemList;\n        case UserTypes.BusinessUser:\n            return businessUserItemList;\n        default:\n            return [];\n    }\n}\n\nconst generalUserItemList = [\n    {\n        text: \"Check in\",\n        icon: <NotificationIcon />,\n        url: \"/checkin\",\n    },\n    {\n        text: \"QR Scan\",\n        icon: <NotificationIcon />,\n        url: \"/qr-scan\",\n    },\n];\n\nconst businessUserItemList = [\n        {\n            text: \"Notifications\",\n            icon: <NotificationIcon />,\n            url: \"/notification\",\n        },\n        {\n            text: \"Employees\",\n            icon: <EmployeeIcon />,\n            url: \"/employee\",\n        },\n        {\n            text: \"Sign into Work\",\n            icon: <SignIntoWork />,\n            url: \"/sign_into_work\",\n        },\n        {\n            text: \"Setting\",\n            icon: <SettingIcon />,\n            url: \"/setting\",\n          },\n        {\n            text: \"QR Code\",\n            icon: <QRCodeIcon />,\n            url: \"/qr_code\",\n        }\n      ];"]},"metadata":{},"sourceType":"module"}