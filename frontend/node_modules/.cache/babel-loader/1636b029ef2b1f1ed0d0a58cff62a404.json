{"ast":null,"code":"var _jsxFileName = \"/home/peter/334/fullstack/frontend/src/components/Layout/NavBar/NarBar.jsx\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from 'react';\nimport { AppBar, Toolbar, IconButton, Typography, Drawer, Hidden, Divider } from '@material-ui/core/';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { withRouter } from \"react-router-dom\"; //other components\n\nimport LogOutButton from '../../Button/LogOutButton/LogOutButton.jsx';\nimport { DrawItemsList } from './DrawItemsList'; //redux\n\nimport { useSelector } from \"react-redux\";\nimport { createSelector, createStructuredSelector } from \"reselect\";\nimport { selectLoginStatus, selectFirstName, selectLastName } from \"../../../redux/login/selector\"; //custom hooks\n\nimport { UserWindowSize } from '../../../hooks/useWindowSize';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst drawerWidth = '260px';\nconst useStyles = makeStyles(theme => ({\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0\n    },\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  appBar: {\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n      marginLeft: drawerWidth\n    },\n    zIndex: theme.zIndex.drawer + 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none'\n    }\n  },\n  drawerContainer: {\n    overflow: 'auto',\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  },\n  stayBottom: {\n    position: 'fixed',\n    bottom: '1%',\n    width: 'inherit',\n    backgroundColor: 'red'\n  }\n}));\nconst stateSelector = createStructuredSelector({\n  loginStatus: createSelector(selectLoginStatus, loginStatus => loginStatus),\n  firstName: createSelector(selectFirstName, firstName => firstName),\n  lastName: createSelector(selectLastName, lastName => lastName)\n});\n\nconst NavBar = props => {\n  _s();\n\n  const {\n    window\n  } = props;\n  const [mobileOpen, setMobileOpen] = useState(false);\n  const {\n    loginStatus,\n    firstName,\n    lastName\n  } = useSelector(stateSelector);\n  const {\n    width\n  } = UserWindowSize();\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const handleDrawerToggle = () => {\n    if (width < 600) setMobileOpen(!mobileOpen);\n  };\n\n  const container = window !== undefined ? () => window().document.body : undefined;\n\n  const drawer = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.drawerContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.toolbar\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DrawItemsList, {\n      width: width,\n      toogleMobileOpen: () => setMobileOpen(!mobileOpen)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.stayBottom,\n      children: /*#__PURE__*/_jsxDEV(LogOutButton, {\n        drawerWidth: width\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this); //if not logged in -> don't display the navbar\n\n\n  if (!loginStatus) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"fixed\",\n      className: classes.appBar,\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"inherit\",\n          \"aria-label\": \"open drawer\",\n          edge: \"start\",\n          onClick: handleDrawerToggle,\n          className: classes.menuButton,\n          children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          noWrap: true,\n          children: `Hi! ${firstName} ${lastName}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      container: container,\n      variant: \"temporary\",\n      anchor: theme.direction === 'rtl' ? 'right' : 'left',\n      open: mobileOpen,\n      onClose: handleDrawerToggle,\n      className: classes.drawer,\n      ModalProps: {\n        keepMounted: true // Better open performance on mobile.\n\n      },\n      children: [/*#__PURE__*/_jsxDEV(Toolbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }, this), drawer]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Hidden, {\n      xsDown: true,\n      implementation: \"css\",\n      children: /*#__PURE__*/_jsxDEV(Drawer, {\n        classes: {\n          paper: classes.drawerPaper\n        },\n        variant: \"permanent\",\n        open: mobileOpen,\n        onClose: handleDrawerToggle,\n        children: [/*#__PURE__*/_jsxDEV(Toolbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this), drawer]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NavBar, \"2hqc757AIU2qyxhtY+UywmPfc1g=\", false, function () {\n  return [useSelector, useStyles, useTheme];\n});\n\n_c = NavBar;\nexport default _c2 = withRouter(NavBar);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NavBar\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/home/peter/334/fullstack/frontend/src/components/Layout/NavBar/NarBar.jsx"],"names":["React","useState","AppBar","Toolbar","IconButton","Typography","Drawer","Hidden","Divider","MenuIcon","makeStyles","useTheme","withRouter","LogOutButton","DrawItemsList","useSelector","createSelector","createStructuredSelector","selectLoginStatus","selectFirstName","selectLastName","UserWindowSize","drawerWidth","useStyles","theme","drawer","breakpoints","up","width","flexShrink","appBar","marginLeft","zIndex","menuButton","marginRight","spacing","display","drawerContainer","overflow","justifyContent","content","flexGrow","padding","stayBottom","position","bottom","backgroundColor","stateSelector","loginStatus","firstName","lastName","NavBar","props","window","mobileOpen","setMobileOpen","classes","handleDrawerToggle","container","undefined","document","body","toolbar","root","direction","keepMounted","paper","drawerPaper"],"mappings":"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","sourcesContent":["import { React, useState } from 'react';\nimport { AppBar, Toolbar, IconButton, Typography, Drawer, Hidden, Divider } from '@material-ui/core/';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { withRouter } from \"react-router-dom\";\n\n//other components\nimport LogOutButton from '../../Button/LogOutButton/LogOutButton.jsx';\nimport { DrawItemsList } from './DrawItemsList';\n\n//redux\nimport { useSelector } from \"react-redux\";\nimport { createSelector, createStructuredSelector } from \"reselect\";\nimport { selectLoginStatus, selectFirstName, selectLastName } from \"../../../redux/login/selector\";\n\n//custom hooks\nimport { UserWindowSize } from '../../../hooks/useWindowSize';\n\nconst drawerWidth = '260px';\n\nconst useStyles = makeStyles((theme) => ({\n    drawer: {\n        [theme.breakpoints.up('sm')]: {\n            width: drawerWidth,\n            flexShrink: 0,\n        },\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    appBar: {\n        [theme.breakpoints.up('sm')]: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        },\n        zIndex: theme.zIndex.drawer + 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n        [theme.breakpoints.up('sm')]: {\n            display: 'none',\n        },\n    },\n    drawerContainer: {\n        overflow: 'auto',\n        display: 'flex',\n        justifyContent: 'center',\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n    stayBottom: {\n        position: 'fixed',\n        bottom: '1%',\n        width: 'inherit',\n        backgroundColor: 'red'\n    },\n}));\n\nconst stateSelector = createStructuredSelector({\n    loginStatus: createSelector(selectLoginStatus, (loginStatus) => loginStatus),\n    firstName: createSelector(selectFirstName, (firstName) => firstName),\n    lastName: createSelector(selectLastName, (lastName) => lastName),\n});\n\nconst NavBar = (props) => {\n    const { window } = props;\n    const [mobileOpen, setMobileOpen] = useState(false);\n    const { loginStatus, firstName, lastName } = useSelector(stateSelector);\n    const { width } = UserWindowSize();\n    const classes = useStyles();\n    const theme = useTheme();\n\n    const handleDrawerToggle = () => {\n        if(width < 600)\n            setMobileOpen(!mobileOpen);\n    };\n    \n    const container = window !== undefined ? () => window().document.body : undefined;\n\n    const drawer = (\n        <div className={classes.drawerContainer}>\n            <div className={classes.toolbar} />\n            <Divider />\n            <DrawItemsList width={width} toogleMobileOpen={() => setMobileOpen(!mobileOpen)} />\n            <div className={classes.stayBottom}>\n                <LogOutButton drawerWidth={width} />\n            </div>\n        </div>\n      );\n\n    //if not logged in -> don't display the navbar\n    if(!loginStatus){\n        return <></>;\n    }\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"fixed\" className={classes.appBar}>\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        edge=\"start\"\n                        onClick={handleDrawerToggle}\n                        className={classes.menuButton}\n                    >\n                    <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" noWrap>\n                        {`Hi! ${firstName} ${lastName}`}\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n                {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n                {/* <Hidden smUp implementation=\"css\"> */}\n                <Drawer\n                    container={container}\n                    variant=\"temporary\"\n                    anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n                    open={mobileOpen}\n                    onClose={handleDrawerToggle}\n                    className={classes.drawer}\n                    ModalProps={{\n                        keepMounted: true, // Better open performance on mobile.\n                    }}\n                >\n                    <Toolbar />\n                    {drawer}\n                </Drawer>\n                {/* </Hidden> */}\n                <Hidden xsDown implementation=\"css\">\n                <Drawer\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}\n                    variant=\"permanent\"\n                    open={mobileOpen}\n                    onClose={handleDrawerToggle}\n                >\n                    <Toolbar />\n                    {drawer}\n                </Drawer>\n                </Hidden>\n        </div>\n    )\n}\n\nexport default withRouter(NavBar);"]},"metadata":{},"sourceType":"module"}