{"ast":null,"code":"var _jsxFileName = \"/home/peter/334/fullstack/frontend/src/pages/normalUserPages/LocationCheckInPages/ProvidePersonalDetailsForCheckInPage/index.jsx\",\n    _s = $RefreshSig$();\n\n//Material UI\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Typography } from \"@material-ui/core\"; //Customer Component\n\nimport { TextField } from '../../../../components/InputFields/TextField'; //React\n\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router\"; //redux\n\nimport { useSelector } from \"react-redux\";\nimport { createSelector, createStructuredSelector } from \"reselect\";\nimport { selectFirstName, selectLastName, selectPhoneNumber } from \"../../../../redux/login/selector\"; //Validation\n\nimport { textFieldValidation, phoneNumberValidation } from '../../../../components/InputFields/Validation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: \"flex\",\n    flexDirection: 'column',\n    width: '70%',\n    margin: 'auto'\n  },\n  heading: {\n    margin: 'auto',\n    display: \"flex\",\n    flexDirection: 'column',\n    [theme.breakpoints.down('sm')]: {\n      width: '100%'\n    },\n    [theme.breakpoints.up('md')]: {\n      width: '40%'\n    }\n  },\n  buttonWrapper: {\n    display: \"flex\",\n    flexDirection: 'column',\n    margin: 'auto',\n    [theme.breakpoints.down('sm')]: {\n      width: '100%',\n      paddingBottom: '3%'\n    },\n    [theme.breakpoints.up('md')]: {\n      width: '40%',\n      paddingBottom: '1%'\n    }\n  },\n  button: {\n    fontSize: '1.4em'\n  },\n  errorText: {\n    color: 'red',\n    padding: 0,\n    margin: 0\n  }\n}));\nconst stateSelector = createStructuredSelector({\n  firstNameFromState: createSelector(selectFirstName, firstName => firstName),\n  lastNameFromState: createSelector(selectLastName, lastName => lastName),\n  phoneNumberFromState: createSelector(selectPhoneNumber, phoneNumber => phoneNumber)\n});\nexport const ProvidePersonalDetailsForCheckInPage = props => {\n  _s();\n\n  const classes = useStyles();\n  const history = useHistory();\n  const {\n    firstNameFromState,\n    lastNameFromState,\n    phoneNumberFromState\n  } = useSelector(stateSelector); //Component State\n\n  const [firstName, setFirstName] = useState(firstNameFromState);\n  const [firstNameError, setFirstNameError] = useState(false);\n  const [lastName, setLastName] = useState(lastNameFromState);\n  const [lastNameError, setLastNameError] = useState(false);\n  const [phoneNumber, setPhoneNumber] = useState(phoneNumberFromState);\n  const [phoneNumberError, setPhoneNumberError] = useState(false); //Updates values in state with error checking\n\n  const setFirstNameValue = event => {\n    setFirstName(event.target.value);\n    validateFirstName(event.target.value);\n  };\n\n  const setLastNameValue = event => {\n    setLastName(event.target.value);\n    validateLastName(event.target.value);\n  };\n\n  const setPhoneNumberValue = event => {\n    setPhoneNumber(event.target.value);\n    validatePhoneNumber(event.target.value);\n  }; //validate fields\n\n\n  const validateFirstName = (item = firstName) => {\n    textFieldValidation(item) ? setFirstNameError(false) : setFirstNameError(true);\n  };\n\n  const validateLastName = (item = lastName) => {\n    textFieldValidation(item) ? setLastNameError(false) : setLastNameError(true);\n  };\n\n  const validatePhoneNumber = (item = phoneNumber) => {\n    phoneNumberValidation(item) ? setPhoneNumberError(false) : setPhoneNumberError(true);\n  }; //adds a new dependent group of inputs to page\n\n\n  const handleAddDependentButtonClick = () => {}; //Sends data to backend to be logged\n\n\n  const handleCheckInButtonClick = () => {\n    //send data to backend to checkin\n    try {\n      console.log('checkin confirm');\n      history.push('/checkin-confirmation');\n    } catch (err) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.heading,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h2\",\n        component: \"h2\",\n        gutterBottom: true,\n        align: \"left\",\n        children: \"Contact Tracing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      id: \"firstName\",\n      label: \"First Name\",\n      value: firstName,\n      onChangeHandler: setFirstNameValue,\n      errorValue: firstNameError,\n      errorMessage: \"First Name field can not be empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      id: \"lastName\",\n      label: \"Last Name\",\n      value: lastName,\n      onChangeHandler: setLastNameValue,\n      errorValue: lastNameError,\n      errorMessage: \"Last Name field can not be empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      id: \"phoneNumber\",\n      label: \"Phone Number\",\n      value: phoneNumber,\n      onChangeHandler: setPhoneNumberValue,\n      errorValue: phoneNumberError,\n      errorMessage: \"Please enter a valid phone number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.buttonWrapper,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: () => handleAddDependentButtonClick(),\n        className: classes.button,\n        children: \"Add Dependent\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.buttonWrapper,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: () => handleCheckInButtonClick(),\n        className: classes.button,\n        children: \"Check In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProvidePersonalDetailsForCheckInPage, \"RwOunvFoLDUMPcxIVoemWmb4fuQ=\", false, function () {\n  return [useStyles, useHistory, useSelector];\n});\n\n_c = ProvidePersonalDetailsForCheckInPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProvidePersonalDetailsForCheckInPage\");","map":{"version":3,"sources":["/home/peter/334/fullstack/frontend/src/pages/normalUserPages/LocationCheckInPages/ProvidePersonalDetailsForCheckInPage/index.jsx"],"names":["makeStyles","Button","Typography","TextField","useState","useHistory","useSelector","createSelector","createStructuredSelector","selectFirstName","selectLastName","selectPhoneNumber","textFieldValidation","phoneNumberValidation","useStyles","theme","container","display","flexDirection","width","margin","heading","breakpoints","down","up","buttonWrapper","paddingBottom","button","fontSize","errorText","color","padding","stateSelector","firstNameFromState","firstName","lastNameFromState","lastName","phoneNumberFromState","phoneNumber","ProvidePersonalDetailsForCheckInPage","props","classes","history","setFirstName","firstNameError","setFirstNameError","setLastName","lastNameError","setLastNameError","setPhoneNumber","phoneNumberError","setPhoneNumberError","setFirstNameValue","event","target","value","validateFirstName","setLastNameValue","validateLastName","setPhoneNumberValue","validatePhoneNumber","item","handleAddDependentButtonClick","handleCheckInButtonClick","console","log","push","err"],"mappings":"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","sourcesContent":["//Material UI\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Typography } from \"@material-ui/core\";\n\n//Customer Component\nimport { TextField } from '../../../../components/InputFields/TextField';\n\n//React\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router\";\n\n//redux\nimport { useSelector } from \"react-redux\";\nimport { createSelector, createStructuredSelector } from \"reselect\";\nimport { selectFirstName, selectLastName, selectPhoneNumber } from \"../../../../redux/login/selector\";\n\n//Validation\nimport { textFieldValidation, phoneNumberValidation } from '../../../../components/InputFields/Validation'\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        display: \"flex\",\n        flexDirection: 'column',\n        width: '70%',\n        margin: 'auto',\n    },\n    heading: {\n        margin: 'auto',\n        display: \"flex\",\n        flexDirection: 'column',\n\n        [theme.breakpoints.down('sm')]: {\n            width: '100%',\n        },\n        [theme.breakpoints.up('md')]: {\n            width: '40%',\n        },\n    },\n    buttonWrapper: {\n        display: \"flex\",\n        flexDirection: 'column',\n        margin: 'auto',\n\n        [theme.breakpoints.down('sm')]: {\n            width: '100%',\n            paddingBottom: '3%',\n        },\n        [theme.breakpoints.up('md')]: {\n            width: '40%',\n            paddingBottom: '1%',\n        }\n    },\n    button: {\n        fontSize: '1.4em'\n    },\n    errorText: {\n        color: 'red',\n        padding: 0,\n        margin: 0\n    },\n}));\n\nconst stateSelector = createStructuredSelector({\n    firstNameFromState: createSelector(selectFirstName, (firstName) => firstName),\n    lastNameFromState: createSelector(selectLastName, (lastName) => lastName),\n    phoneNumberFromState: createSelector(selectPhoneNumber, (phoneNumber) => phoneNumber),\n});\n\nexport const ProvidePersonalDetailsForCheckInPage = (props) => {\n    const classes = useStyles();\n    const history = useHistory();\n    const { firstNameFromState, lastNameFromState, phoneNumberFromState } = useSelector(stateSelector);\n\n    //Component State\n    const [firstName, setFirstName] = useState(firstNameFromState);\n    const [firstNameError, setFirstNameError] = useState(false);\n\n    const [lastName, setLastName] = useState(lastNameFromState);\n    const [lastNameError, setLastNameError] = useState(false);\n    \n    const [phoneNumber, setPhoneNumber] = useState(phoneNumberFromState);\n    const [phoneNumberError, setPhoneNumberError] = useState(false);\n\n    //Updates values in state with error checking\n    const setFirstNameValue = (event) => {\n        setFirstName(event.target.value);\n        validateFirstName(event.target.value);\n    }\n    const setLastNameValue = (event) => {\n        setLastName(event.target.value);\n        validateLastName(event.target.value);\n    }\n    const setPhoneNumberValue = (event) => {\n        setPhoneNumber(event.target.value);\n        validatePhoneNumber(event.target.value);\n    }\n\n    //validate fields\n    const validateFirstName = (item = firstName) => {\n        textFieldValidation(item) ? setFirstNameError(false) : setFirstNameError(true);\n    }\n    const validateLastName = (item = lastName) => {\n        textFieldValidation(item) ? setLastNameError(false) : setLastNameError(true);\n    }\n    const validatePhoneNumber = (item = phoneNumber) => {\n        phoneNumberValidation(item) ? setPhoneNumberError(false) : setPhoneNumberError(true);\n    }\n\n    //adds a new dependent group of inputs to page\n    const handleAddDependentButtonClick = () => {\n        \n    }\n\n    //Sends data to backend to be logged\n    const handleCheckInButtonClick = () => {\n        //send data to backend to checkin\n        try {\n            console.log('checkin confirm')\n            history.push('/checkin-confirmation');\n        } catch (err) {\n\n        }\n    }\n\n    return (\n        <div className={classes.container}>\n            <div className={classes.heading}>\n                <Typography variant=\"h2\" component=\"h2\" gutterBottom align=\"left\">\n                    Contact Tracing\n                </Typography>\n            </div>\n\n            {/* First Name */}\n            <TextField id=\"firstName\" \n                label=\"First Name\" value={firstName} onChangeHandler={setFirstNameValue}\n                errorValue={firstNameError} errorMessage=\"First Name field can not be empty\" />\n\n            {/* lastName */}\n            <TextField id=\"lastName\" \n                label=\"Last Name\" value={lastName} onChangeHandler={setLastNameValue}\n                errorValue={lastNameError} errorMessage=\"Last Name field can not be empty\" />\n            \n            {/* Phone Number */}\n            <TextField id=\"phoneNumber\" \n                label=\"Phone Number\" value={phoneNumber} onChangeHandler={setPhoneNumberValue}\n                errorValue={phoneNumberError} errorMessage=\"Please enter a valid phone number\" />\n\n            {/* Add Dependent Button */}\n            <div className={classes.buttonWrapper}>\n                <Button variant=\"contained\" color=\"secondary\" onClick={() => handleAddDependentButtonClick() } className={classes.button}>\n                    Add Dependent\n                </Button>\n            </div>\n\n            {/* Check in Button */}\n            <div className={classes.buttonWrapper}>\n                <Button variant=\"contained\" color=\"secondary\" onClick={() => handleCheckInButtonClick() } className={classes.button}>\n                    Check In\n                </Button>\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}