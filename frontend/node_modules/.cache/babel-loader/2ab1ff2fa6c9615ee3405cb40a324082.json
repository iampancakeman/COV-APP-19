{"ast":null,"code":"var _jsxFileName = \"/home/peter/334/fullstack/frontend/src/components/InputFields/Password/index.jsx\",\n    _s = $RefreshSig$();\n\n//Material UI\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { FormControl, InputLabel, OutlinedInput, InputAdornment, IconButton } from \"@material-ui/core\";\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  textFieldWrapper: {\n    margin: 'auto',\n    display: \"flex\",\n    flexDirection: 'column',\n    [theme.breakpoints.down('sm')]: {\n      width: '100%',\n      paddingBottom: '5%'\n    },\n    [theme.breakpoints.up('md')]: {\n      width: '40%',\n      paddingBottom: '2%'\n    }\n  },\n  errorText: {\n    color: 'red',\n    padding: 0,\n    margin: 0\n  }\n}));\nexport const PasswordField = props => {\n  _s();\n\n  const {\n    id,\n    label,\n    value,\n    onChangeHandler,\n    errorValue,\n    errorMessage,\n    showPassword,\n    handleClickShowPassword\n  } = props;\n  const classes = useStyles(); //prevents the default mouse down on the password/confirmPassword icon\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormControl, {\n    className: classes.textFieldWrapper,\n    variant: \"outlined\",\n    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n      htmlFor: `outlined-adornment-${id}`,\n      required: true,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n      id: `outlined-adornment-${id}`,\n      label: `${label} *`,\n      type: showPassword ? 'text' : 'password',\n      value: value,\n      required: true,\n      onChange: onChangeHandler,\n      error: errorValue,\n      endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n        position: \"end\",\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"toggle password visibility\",\n          onClick: handleClickShowPassword,\n          onMouseDown: handleMouseDownPassword,\n          edge: \"end\",\n          children: showPassword ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 41\n          }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 58\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this),\n      labelWidth: 70\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this), errorValue ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: classes.errorText,\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 31\n    }, this) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PasswordField, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = PasswordField;\n\nvar _c;\n\n$RefreshReg$(_c, \"PasswordField\");","map":{"version":3,"sources":["/home/peter/334/fullstack/frontend/src/components/InputFields/Password/index.jsx"],"names":["makeStyles","FormControl","InputLabel","OutlinedInput","InputAdornment","IconButton","Visibility","VisibilityOff","useStyles","theme","textFieldWrapper","margin","display","flexDirection","breakpoints","down","width","paddingBottom","up","errorText","color","padding","PasswordField","props","id","label","value","onChangeHandler","errorValue","errorMessage","showPassword","handleClickShowPassword","classes","handleMouseDownPassword","event","preventDefault"],"mappings":"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","sourcesContent":["//Material UI\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { FormControl, InputLabel, OutlinedInput, InputAdornment, IconButton } from \"@material-ui/core\";\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nconst useStyles = makeStyles((theme) => ({\n    textFieldWrapper: {\n        margin: 'auto',\n        display: \"flex\",\n        flexDirection: 'column',\n\n        [theme.breakpoints.down('sm')]: {\n            width: '100%',\n            paddingBottom: '5%',\n        },\n        [theme.breakpoints.up('md')]: {\n            width: '40%',\n            paddingBottom: '2%',\n        }\n    },\n    errorText: {\n        color: 'red',\n        padding: 0,\n        margin: 0\n    }\n}));\n\nexport const PasswordField = (props) => {\n    const { id, label, value, onChangeHandler, errorValue, errorMessage, showPassword, handleClickShowPassword } = props;\n    const classes = useStyles();\n\n    //prevents the default mouse down on the password/confirmPassword icon\n    const handleMouseDownPassword = (event) => {\n        event.preventDefault();\n    };\n    \n    return (\n        <FormControl className={classes.textFieldWrapper} variant=\"outlined\">\n                <InputLabel htmlFor={`outlined-adornment-${id}`} required>{label}</InputLabel>\n                <OutlinedInput\n                    id={`outlined-adornment-${id}`}\n                    label={`${label} *`}\n                    type={showPassword ? 'text' : 'password'}\n                    value={value}\n                    required\n                    onChange={onChangeHandler}\n                    error={errorValue}\n                    endAdornment={\n                    <InputAdornment position=\"end\">\n                        <IconButton\n                        aria-label=\"toggle password visibility\"\n                        onClick={handleClickShowPassword}\n                        onMouseDown={handleMouseDownPassword}\n                        edge=\"end\"\n                        >\n                        {showPassword ? <Visibility /> : <VisibilityOff />}\n                        </IconButton>\n                    </InputAdornment>\n                    }\n                    labelWidth={70}\n                />\n                {errorValue ? <p className={classes.errorText}>{errorMessage}</p> : \"\"}\n            </FormControl>\n    )\n}"]},"metadata":{},"sourceType":"module"}